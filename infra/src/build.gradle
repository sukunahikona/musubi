import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'war'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
}

group = 'jp.musubi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
// tomcatバージョン指定
ext['tomcat.version'] = '10.0.27'

repositories {
	mavenCentral()
}

def junit_jupiter_version = '5.9.2'
def mockito_kotlin_version = '2.0.0-alpha01'

dependencies {
	implementation 'org.springframework.session:spring-session-jdbc:3.0.0'
	implementation 'org.webjars.npm:vuex:4.0.0-rc.2'
	implementation 'org.webjars.npm:vue:3.2.20'
	implementation 'org.webjars:webjars-locator:0.42'
	implementation 'org.webjars:bootstrap:5.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
	runtimeOnly 'org.postgresql:postgresql'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit'
	}
	// for Test(junit5)
	testImplementation 'org.springframework.boot:spring-boot-starter-jetty'
	testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
	testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
}

war {
	archiveName 'musubi.war'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

test {
	useJUnitPlatform()
}

task copyWar(type: Copy) {
	from './build/libs/musubi.war'
	into '../tomcat/'
}

task deploy {
	dependsOn war, copyWar
}
